{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "I85dp7cSQZnY"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import torch"
      ],
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g2X5ZMscQm7F",
        "outputId": "4e9aa2e7-2e58-4cc0-c209-4095e04c9db2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "#task1 데이터 불러오기\n",
        "data = pd.read_csv('./p01_input.csv',encoding = 'cp949')\n",
        "data = data[ ['키','몸무게']]\n",
        "data = data.rename(columns={'키':'height','몸무게':'weight'})\n",
        "data = data.dropna()#nan값 제거\n",
        "print(data)"
      ],
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "      height  weight\n",
            "0      125.8    27.3\n",
            "1      124.3    25.4\n",
            "2      119.2    23.5\n",
            "3      115.0    20.0\n",
            "4      120.0    33.5\n",
            "...      ...     ...\n",
            "9681   176.1    50.4\n",
            "9682   174.1    88.8\n",
            "9683   169.5    63.2\n",
            "9684   159.2    52.9\n",
            "9685   162.0    67.7\n",
            "\n",
            "[9682 rows x 2 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_sS3EbYaRNyx",
        "outputId": "1ea8cf18-4869-4975-e2ac-5f880eee3880",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "#task2 키,몸무게 평균\n",
        "hmean = data.height.mean()\n",
        "wmean = data.weight.mean()\n",
        "print(hmean,wmean)"
      ],
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "154.56483164635458 50.20759140673406\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fGfFtWU1Rn88",
        "outputId": "6e3c29b4-0851-4b0c-9db1-f4ae1e13aa40",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "#task3 상관관계 구하기\n",
        "h_c = data.height - hmean\n",
        "w_c = data.weight - wmean\n",
        "denom = np.sqrt(np.sum(h_c ** 2) * np.sum(w_c ** 2))\n",
        "if denom != 0:\n",
        "  pcc = np.sum(h_c * w_c)/denom\n",
        "print(pcc)"
      ],
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.8490058387689018\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HVSD_hbVYCYF"
      },
      "source": [
        "#task4\n",
        "w = torch.zeros(1,1)\n",
        "b = torch.zeros(1,1)\n",
        "height = torch.FloatTensor(data['height'])\n",
        "height = torch.unsqueeze(height,1)\n",
        "weight = torch.FloatTensor(data['weight'])\n",
        "weight = torch.unsqueeze(weight,1)\n",
        "lr = 0.000041\n",
        "\n",
        "for epoch in range(3000000):\n",
        "  w.requires_grad_(True)\n",
        "  b.requires_grad_(True)\n",
        "  hyp = torch.mm(height,w) + b\n",
        "  cost = torch.mean((hyp-weight)**2)\n",
        "  cost.backward()\n",
        "  with torch.no_grad() as grd:\n",
        "    w = w - lr * w.grad\n",
        "    b = b - lr * b.grad\n",
        "\n"
      ],
      "execution_count": 235,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_I2Ky9staM7F",
        "outputId": "df3c03a8-fec5-43d3-b8cf-dadfafbb89eb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "#task5 산포도,직선그리기\n",
        "print(w,b) #task4에서 구한 w,b값\n",
        "plt.plot(height,w * height + b,'r')\n",
        "plt.scatter(data['height'], data['weight'])\n",
        "plt.xlabel('height')\n",
        "plt.ylabel('weight')\n",
        "plt.show()"
      ],
      "execution_count": 237,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "tensor([[0.8294]]) tensor([[-77.9363]])\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CFvixBX7DmlY"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
